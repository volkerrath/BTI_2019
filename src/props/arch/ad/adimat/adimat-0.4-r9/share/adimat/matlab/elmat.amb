% Define all symbols in the matlab/elmat package.
%
% Copyright 2003-2004 Andre Vehreschild, Institute for Scientific Computing   
%                     RWTH Aachen University
% This code is under development! Use at your own risk! Duplication,
% modification and distribution FORBIDDEN!

%
% $Log$
% Revision 1.5  2004/01/05 15:41:03  af116ve
% Added copyright notice.
%
% Revision 1.4  2003/08/11 07:42:58  af116ve
% Added different spelling of nan -> NaN.
%
% Revision 1.3  2003/04/24 15:52:01  af116ve
% Corrected typos.
%
% Revision 1.2  2003/04/24 14:46:18  af116ve
% All identifiers of Matlab 6.5 R13 are now recognized.
%
%

%ADiMat MIN_VERSION=0.1

% Elementary matrices and matrix manipulation.

% Elementary matrices.
BMFUNC $$= zeros($#) DIFFTO g_zeros($#) 
BMFUNC $$= ones($#)  DIFFTO g_zeros($#)
BMFUNC $$= eye($#)   DIFFTO g_zeros($#)
BMFUNC $$= repmat($1, $#) DIFFTO call(@repmat, $@1, $#)
BMFUNC $$= rand($#)  DIFFTO g_zeros($#)
BMFUNC $$= randn($#) DIFFTO g_zeros($#)
% Deactviate until the builtin-system can cope with default-values.
% BMFUNC $$= linspace($1, $2, $3=100) DIFFTO g_zeros(1, $3)
% BMFUNC $$= logspace($1, $2, $3=50) DIFFTO g_zeros(1, $3)
BMFUNC $$= linspace($1, $2, $3) DIFFTO g_zeros(1, $3)
BMFUNC $$= logspace($1, $2, $3) DIFFTO g_zeros(1, $3)
BMFUNC [$$#]= freqspace($#) NODIFF
% Don't know how to differentiate freqspace yet. Any ideas?
BMFUNC [$$#]= meshgrid($#) DIFFTO calln(@meshgrid, $@#)

% Basic array information.
BMFUNC [$$#]= size($#) IGNORE
BMFUNC $$= length($1) IGNORE
BMFUNC $$= ndims($1) IGNORE
BMFUNC $$= numel($1, $#) IGNORE
% BMFUNC disp($1) IGNORE % now defined in lang.amb
BMFUNC $$:bool= isempty($1) IGNORE
BMFUNC $$:bool= isequal($1, $2, $#) IGNORE
BMFUNC $$:bool= isequalwithequalnans($1, $2, $#) IGNORE
BMFUNC $$:bool= isnumeric($1) IGNORE
BMFUNC $$:bool= islogical($1) IGNORE
BMFUNC $$= logical($1) NODIFF

% Matrix manipulation.
BMFUNC $$= cat($1, $#) DIFFTO call1n(@cat, $1, $@#)
BMFUNC $$= reshape($1, $#) DIFFTO call(@reshape, $@1, $#)
BMFUNC $$= diag($1, $#) DIFFTO call(@diag, $@1, $#)
BMFUNC $$= blkdiag($#) DIFFTO calln(@blkdiag, $@#)
BMFUNC $$= tril($1, $#) DIFFTO call(@tril, $@1, $#)
BMFUNC $$= triu($1, $#) DIFFTO call(@triu, $@1, $#)
BMFUNC $$= fliplr($1) DIFFTO call(@fliplr, $@1)
BMFUNC $$= flipud($1) DIFFTO call(@flipud, $@1)
BMFUNC $$= flipdim($1, $2) DIFFTO call(@flipdim, $@1, $2)
BMFUNC $$= rot90($1, $#) DIFFTO call(@rot90, $@1, $#)
BMFUNC [$$#]= find($1) IGNORE
%BMFUNC $$= end() IGNORE % Defined in lang.amb now.
BMFUNC $$= sub2ind($#) IGNORE
BMFUNC [$$#]= ind2sub($1, $2) IGNORE

% Multi-dimensional array functions.
BMFUNC [$$#]= ndgrid($#) DIFFTO calln(@ndgrid, $@#)
BMFUNC $$= permute($1, $2) DIFFTO call(@permute, $@1, $2)
BMFUNC $$= ipermute($1, $2) DIFFTO call(@ipermute, $@1, $2)
BMFUNC $$= shiftdim($1, $2) DIFFTO call(@shiftdim, $@1, $2)
% Most usual call, with patternmatching this is possible, too.
% BMFUNC [$$1, $$2]= shiftdim($1) IGNORE
BMFUNC $$= circshift($1, $2) DIFFTO call(@circshift, $@1, $2)
BMFUNC $$= squeeze($1) DIFFTO call(@squeeze, $@1)

% Special variables and constants.
% Should never be used, but some bad code may rely on it:
% BVAR ans:generic
BVAR eps:real
BVAR realmax:real
BVAR realmin:real
BVAR pi:real
BVAR i:complex
BVAR j:complex
BVAR inf:real
BVAR nan:real
BVAR NaN:real    % It is legal to spell it this way.
BMFUNC $$:bool= isnan($1) IGNORE
BMFUNC $$:bool= isinf($1) IGNORE
BMFUNC $$:bool= isfinite($1) IGNORE
BCOMMAND why($1)
BVAR false:bool
BVAR true:bool

% Specialized matrices.
BMFUNC $$=compan($1) DIFFTO g_zeros(length($1)-1)
% Correct derivative for compan ?
%
% The derivates of the following matrices are not correctly specified.
% If you need one of these, contact the author. If you have an idea, what
% the derivative is, supply it to the author!!!
BMFUNC [$$#]=gallery($#) NODIFF
BMFUNC $$=hadamard($1) NODIFF
BMFUNC $$=hankel($#) NODIFF
BMFUNC $$=hilb($#) NODIFF
BMFUNC $$=invhilb($#) NODIFF
BMFUNC $$=magic($1) DIFFTO g_zeros($1)
BMFUNC $$=pascal($#) NODIFF
BMFUNC $$=rosser($#) NODIFF
BMFUNC $$=toeplitz($#) NODIFF
BMFUNC $$=vander($#) NODIFF 
BMFUNC $$=wilkinson($#) NODIFF

% Obsolete functions.
BMFUNC $$=meshdom($#) NODIFF
BMFUNC $$=flops($#) NODIFF

% vim:nocindent:noautoindent:nowrap:
