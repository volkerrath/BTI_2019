%
%                             DISCLAIMER
%
%
% This file was generated by:
% ADiMat version 0.5.2 (*** DEBUG ***, beta, lcse, gcse(ß), fwdmd, 2fwdmd, opt_ls, constfold, narg, vararg(ß), Jun 27 2008) arch: i686-pc-linux-gnu
% compiled Jun 27 2008 with gcc 4.1.2 20070925 (Red Hat 4.1.2-33).
% Copyright 2001- 2007 Andre Vehreschild, Institute for
% Scientific Computing, Aachen University, D-52056 Aachen, Germany.
% http://www.sc.rwth-aachen.de/vehreschild/adimat/
% This file was augmented on Thu Oct 23 16:15:55 2008
%
% ADiMat was prepared as part of an employment at the Institute
% for Scientific Computing, RWTH Aachen University, Germany and is
% provided AS IS. NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL
% REPUBLIC OF GERMANY NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY,
% EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY
% FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY INFORMATION OR
% PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD NOT INFRINGE
% PRIVATELY OWNED RIGHTS.
%
% Global flags were:
% FORWARDMODE -- Apply the forward mode to the files.
% NOOPEROPTIM -- Do not use optimized operators. I.e.:
%		 g_a*b*g_c -/-> mtimes3(g_a, b, g_c)
% NOGLOBALCSE -- Prevents the application of global common subexpression
%		 elimination after canonicalizing the code.
% NOLOOPSAVING -- Do not insert ls_* functions to encapsulate the loops over
%		 directional derivatives.
% FUNCMODE    -- Inputfile is a function (This flag can not be set explicitly).
% VISITFWDMD  -- Use the visitor to generate the differentiated code.
% GRADFUNCPREFIX='sg_'

function [g_kf, kf, g_kfw, kfw]= sg_kfT(g_T, T, S)
   % [kf,kfw]=kfT(T,S,method) calculate the thermal conductivity kf in W/(m*K) of
   % formation water, given temperature in C, and salinity in mass fraction
   % (g/g)of NaCl. Thermal conductivity of freshwater, kfw is calculated using
   % the Phillips (1981) formulation. 
   % Range of validity:  20 to 330°C and up to 4 molal NaCl
   %
   % Code  verification:
   %		INPUT:	TEMP = 298.15K	P =0.1013 MPa  S = 0.25 g/g	 
   %     OUTPUT: TC_BR2 = 0.587 W/(m*K)
   %		INPUT:	TEMP = 393.15K	P =   30 MPa   S = 0.10 g/g	
   %     OUTPUT: TC_BR2 = 0.688 W/(m*K)
   %
   %  References: Phillips SL, Igbene A, Fair JA, Ozbek H, Tavana M (1981) A
   %         technical databook for geothermal energy utilization. Lawrence Berkeley
   %         Laboratory Report 12810, 46 p.
   %
   % Fortran source written written by JJAadams for Alberta Geological Survey
   % May. 2001; Matlab code V. Rath, RWTH Aachen University, April 2004
   %
   narginmapper_00003= [0, 1, 2];
   if narginmapper_00003(nargin)< 2, S= 0.; end
   % normalized temperature Tr 
   g_Tr= (273.15' \ ((g_T))' )' ;
   Tr= (T+ 273.15)/ 273.15; 
   g_Tr2= g_Tr.* Tr+ Tr.* g_Tr;
   Tr2= Tr.* Tr; 
   g_Tr3= g_Tr2.* Tr+ Tr2.* g_Tr;
   Tr3= Tr2.* Tr; 
   g_kfw= (2.8395d0* g_Tr- 1.8007d0* g_Tr2+ 0.52577d0* g_Tr3- 0.07344d0* (g_Tr3.* Tr+ Tr3.* g_Tr));
   kfw= (-0.92247d0+ 2.8395d0* Tr- 1.8007d0* Tr2+ 0.52577d0* Tr3- 0.07344d0* (Tr3.* Tr)); 
   g_kf= g_kfw;
   kf= kfw; 
   
   if S> 0.0000001, 
      g_T2= g_T.* T+ T.* g_T;
      T2= T.* T; 
      C= S./ (1+ S); C2= C.* C; % C=salinity in mol/kg
      tmp_kfT_00016= 1.d0- (2.3434d-3- 7.924d-6* T+ 3.924d-8* T2).* C+ (1.06d-5- 2.d-8* T- 1.2d-10* T2).* C2;
      g_kf= g_kfw.* tmp_kfT_00016+ kfw.* ((-((-7.924d-6* g_T)+ 3.924d-8* g_T2).* C)+ ((-2.d-8* g_T)- 1.2d-10* g_T2).* C2);
      kf= kfw.* tmp_kfT_00016
      clear tmp_kfT_00016 ;
   end